apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-career-buddy-frontend
  namespace: kf-partition-gray
  labels:
    app: ai-career-buddy-frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ai-career-buddy-frontend
  template:
    metadata:
      labels:
        app: ai-career-buddy-frontend
    spec:
      containers:
      - name: frontend
        image: harbor.weizhipin.com/arsenal-ai/nginx:alpine
        ports:
        - containerPort: 80
          protocol: TCP
        env:
        - name: BACKEND_SERVICE_IP
          value: "10.98.208.222"
        - name: BACKEND_SERVICE_PORT
          value: "80"
        volumeMounts:
        - name: frontend-dist
          mountPath: /usr/share/nginx/html
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: frontend-dist
        emptyDir: {}
      - name: nginx-config
        configMap:
          name: frontend-nginx-config
      - name: nginx-template
        configMap:
          name: frontend-nginx-template
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-nginx-config
  namespace: kf-partition-gray
data:
  default.conf: |
    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # 前端路由支持
        location / {
            try_files $uri $uri/ /index.html;
        }

        # API代理到后端 - 使用环境变量
        location /api/ {
            proxy_pass http://${BACKEND_SERVICE_IP}:${BACKEND_SERVICE_PORT}/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 支持WebSocket
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # 静态资源缓存
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Gzip压缩
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-nginx-template
  namespace: kf-partition-gray
data:
  default.conf.template: |
    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # 前端路由支持
        location / {
            try_files $uri $uri/ /index.html;
        }

        # API代理到后端 - 使用环境变量
        location /api/ {
            proxy_pass http://${BACKEND_SERVICE_IP}:${BACKEND_SERVICE_PORT}/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 支持WebSocket
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # 静态资源缓存
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Gzip压缩
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    }
---
apiVersion: v1
kind: Service
metadata:
  name: ai-career-buddy-frontend-service
  namespace: kf-partition-gray
  labels:
    app: ai-career-buddy-frontend
spec:
  selector:
    app: ai-career-buddy-frontend
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP
  type: ClusterIP
