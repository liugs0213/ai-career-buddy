apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-career-buddy-frontend
  namespace: kf-partition-gray
  labels:
    app: ai-career-buddy-frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ai-career-buddy-frontend
  template:
    metadata:
      labels:
        app: ai-career-buddy-frontend
    spec:
      initContainers:
      - name: build-frontend
        image: node:18-alpine
        env:
        - name: VITE_API_BASE_URL
          value: "http://10.98.208.222:80"
        command: ["/bin/sh"]
        args:
        - -c
        - |
          cd /app
          npm install
          npm run build
          cp -r dist/* /usr/share/nginx/html/
        volumeMounts:
        - name: frontend-source
          mountPath: /app
        - name: frontend-dist
          mountPath: /usr/share/nginx/html
      containers:
      - name: frontend
        image: harbor.weizhipin.com/arsenal-ai/nginx:alpine
        ports:
        - containerPort: 80
          protocol: TCP
        volumeMounts:
        - name: frontend-dist
          mountPath: /usr/share/nginx/html
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
      volumes:
      - name: frontend-source
        configMap:
          name: frontend-source-code
      - name: frontend-dist
        emptyDir: {}
      - name: nginx-config
        configMap:
          name: frontend-nginx-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-source-code
  namespace: kf-partition-gray
data:
  # 这里需要包含前端源代码
  # 实际使用时需要从Git仓库或构建镜像中获取
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-nginx-config
  namespace: kf-partition-gray
data:
  default.conf: |
    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # 前端路由支持
        location / {
            try_files $uri $uri/ /index.html;
        }

        # 静态资源缓存
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Gzip压缩
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    }
---
apiVersion: v1
kind: Service
metadata:
  name: ai-career-buddy-frontend-service
  namespace: kf-partition-gray
  labels:
    app: ai-career-buddy-frontend
spec:
  selector:
    app: ai-career-buddy-frontend
  ports:
    - name: http
      port: 80
      targetPort: 80
      protocol: TCP
  type: ClusterIP
